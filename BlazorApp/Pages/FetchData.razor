@page "/fetchdata"
@inject HttpClient Http
@using System.Net.Http.Json
@using BlazorApp.Shared
@using BlazorApp.Models

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>
<p>This component demonstrates fetching data from the file.</p>

@*読込件数設定、読み込み*@
<div class="d-flex flex-wrap mt-4">
  <MudNumericField @bind-Value="_dispNumber" Label="読込件数" Variant="MudBlazor.Variant.Text" Min="5" Max="40000" Step="1000" />
  <MudButton Disabled="@_loading" OnClick="ProcessSomething" Variant="MudBlazor.Variant.Filled" Color="MudBlazor.Color.Primary">
    @if (_loading)
    {
      <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
      <MudText Class="ms-2">更新中</MudText>
    }
    else
    {
      <MudText>読込件数 更新</MudText>
    }
  </MudButton>
</div>
@if (_items == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var forecast in _items)
      {
        <tr>
          <td>@forecast.Date.ToShortDateString()</td>
          <td>@forecast.TemperatureC</td>
          <td>@forecast.TemperatureF</td>
          <td>@forecast.Summary</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  bool _loading = true;
  int _dispNumber { get; set; } = 10000;
  IEnumerable<WeatherForecast>? _items = new List<WeatherForecast>();

  protected override async Task OnInitializedAsync()
  {
    _loading = true;
    _items = await Http.GetFromJsonAsync<List<WeatherForecast>>("sample-data/weather.json");
    _loading = false;
  }

  async Task ProcessSomething()
  {
    _loading = true;
    _items = new List<WeatherForecast>();
    await Task.Delay(300);
    await Task.Yield();

    string fileName = _dispNumber switch
    {
      <= 5 => "sample-data/weather.json",
      <= 1000 => "sample-data/weather1000.json",
      <= 5000 => "sample-data/weather5000.json",
      <= 10000 => "sample-data/weather10000.json",
      <= 20000 => "sample-data/weather20000.json",
      _ => "sample-data/weather40000.json"
    };
    _items = (await Http.GetFromJsonAsync<List<WeatherForecast>>(fileName))!.Take(_dispNumber);
    _loading = false;
  }

}